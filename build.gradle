plugins {
  id 'scala'
  id 'idea'
  id 'com.github.johnrengelman.shadow' version '5.1.0'
  id "com.github.maiflai.scalatest" version '0.25'
}

compileScala.targetCompatibility = 1.8
compileScala.sourceCompatibility = 1.8

ext {
  sparkVersion = '2.4.3'
  awsVersion = '1.11.650'
}

repositories {
  jcenter()
}

dependencies {
  implementation 'org.scala-lang:scala-library:2.11.12'
  implementation 'org.clapper:grizzled-slf4j_2.11:1.3.4'
  implementation 'org.json4s:json4s-ext_2.11:3.5.3'

  compileOnly "org.apache.spark:spark-sql_2.11:$sparkVersion"
  compileOnly "org.apache.spark:spark-hive_2.11:$sparkVersion"

  compileOnly "com.amazonaws:aws-java-sdk-kinesis:$awsVersion"
  compileOnly "com.amazonaws:aws-java-sdk-dynamodb:$awsVersion"
  implementation 'org.apache.kafka:kafka-clients:2.2.0'

  testImplementation 'org.scalatest:scalatest_2.11:3.0.8'
  testImplementation 'org.mockito:mockito-scala-scalatest_2.11:1.6.2'
  testRuntime 'org.pegdown:pegdown:1.6.0'
}

sourceSets {
  test.compileClasspath += configurations.compileOnly
  test.runtimeClasspath += configurations.compileOnly
}

test {
  testLogging {
    events 'passed', 'skipped', 'failed'
  }
}

jar {
  manifest {
    attributes("Implementation-Title": project.name,
               "Implementation-Version": project.version)
  }
}

shadowJar {
  classifier = null
  mergeServiceFiles()
}

